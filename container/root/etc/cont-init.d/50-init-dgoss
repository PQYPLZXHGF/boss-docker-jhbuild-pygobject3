#!/usr/bin/execlineb -P
# -*- mode: bash -*-
# vi: set ft=bash:

foreground { s6-echo " [run] goss jhbuild tests" }

# FIXME: This is broken for some reason
# exec s6-setuidgid pi /bin/bash -C '/usr/local/bin/goss -g /tests/goss.jhbuild.yaml validate --retry-timeout 30s --sleep 1s'

# FIXME: This is broken as well
# exec s6-setuidgid pi /bin/bash -C '/usr/local/bin/goss --help'

# FIXME: Wow so this is busted too, error below
# exec s6-setuidgid pi /bin/bash -C 'w'


# jhbuild_pygobject3_1  |  [run] SCARLETT_BUILD_GNOME not set, moving on ...
# jhbuild_pygobject3_1  | [cont-init.d] 40-init-jhbuild: exited 0.
# jhbuild_pygobject3_1  | [cont-init.d] 50-init-dgoss: executing...
# jhbuild_pygobject3_1  | [run] goss jhbuild tests
# jhbuild_pygobject3_1  | /usr/bin/who: /usr/bin/who: cannot execute binary file
# jhbuild_pygobject3_1  | [cont-init.d] 50-init-dgoss: exited 126.
# jhbuild_pygobject3_1  | [cont-finish.d] executing container finish scripts...
# jhbuild_pygobject3_1  | [cont-finish.d] done.

# NOTE: Lets try this with execlineb, meaning it'll run as root
# TODO: Surround this in a conditional to tell us to run the tests or skip them. By default we want them on
# NOTE: Okay this actually runs, BUT, it errors on 30 items because it isn't running as pi user

# s6-setuidgid pi
# with-contenv
# s6-env -i
# /usr/local/bin/goss -g /tests/goss.jhbuild.yaml validate --retry-timeout 30s --sleep 1s

# Okay I think this will actually run the tests like the pi user
su - pi -c "/usr/local/bin/goss -g /tests/goss.jhbuild.yaml validate --retry-timeout 30s --sleep 1s"

######################################################################
# source: claw-docker-base
# NOTE: This will overwrite new environment variables you set
# in here using multiline to the ones the container sees!
# multisubstitute
# {
#   import -D "etcd" ETCD_HOST
#   import -D "2379" ETCD_HOST_PORT
#   import -D 0 ETCD_CONNECTION_TIMEOUT
# }
# foreground {
#   with-contenv
#   s6-env -i
#   s6-dumpenv -- /var/run/s6/container_environment
# }
######################################################################

## Signal build complete if running on ci ##
if [[ $TRAVIS_CI != true ]]; then
  echo " [run] finished running jhbuild goss tests ... sending signal complete"
  exit $SIGNAL_BUILD_STOP
fi
