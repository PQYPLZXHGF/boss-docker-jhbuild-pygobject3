#!/usr/bin/execlineb -P
# -*- mode: bash -*-
# vi: set ft=bash:

foreground { s6-echo " [run] goss jhbuild tests" }

# FIXME: This is broken for some reason
# exec s6-setuidgid pi /bin/bash -C '/usr/local/bin/goss -g /tests/goss.jhbuild.yaml validate --retry-timeout 30s --sleep 1s'

# FIXME: This is broken as well
# exec s6-setuidgid pi /bin/bash -C '/usr/local/bin/goss --help'

# FIXME: Wow so this is busted too, error below
# exec s6-setuidgid pi /bin/bash -C 'w'


# jhbuild_pygobject3_1  |  [run] SCARLETT_BUILD_GNOME not set, moving on ...
# jhbuild_pygobject3_1  | [cont-init.d] 40-init-jhbuild: exited 0.
# jhbuild_pygobject3_1  | [cont-init.d] 50-init-dgoss: executing...
# jhbuild_pygobject3_1  | [run] goss jhbuild tests
# jhbuild_pygobject3_1  | /usr/bin/who: /usr/bin/who: cannot execute binary file
# jhbuild_pygobject3_1  | [cont-init.d] 50-init-dgoss: exited 126.
# jhbuild_pygobject3_1  | [cont-finish.d] executing container finish scripts...
# jhbuild_pygobject3_1  | [cont-finish.d] done.

# NOTE: Lets try this with execlineb, meaning it'll run as root
# TODO: Surround this in a conditional to tell us to run the tests or skip them. By default we want them on
# NOTE: Okay this actually runs, BUT, it errors on 30 items because it isn't running as pi user

# s6-setuidgid pi
# with-contenv
# s6-env -i
# /usr/local/bin/goss -g /tests/goss.jhbuild.yaml validate --retry-timeout 30s --sleep 1s

# Okay I think this will actually run the tests like the pi user
# su - pi -c "/usr/local/bin/goss -g /tests/goss.jhbuild.yaml validate --retry-timeout 30s --sleep 1s"

#######################################################################################################################################
# FIXME: comment this back in for tonight
# source: https://askubuntu.com/questions/490620/difference-between-logname-and-logname
with-contenv

foreground { s6-echo " [run] env before multisubstitute" }
foreground { s6-env }

s6-envuidgid pi

foreground { s6-echo " [run] multisubstitute for GOSS TESTS" }
multisubstitute
{
  importas UID UID
  importas GID GID
  importas DEBIAN_FRONTEND DEBIAN_FRONTEND
  importas LANG LANG
  importas LC_ALL LC_ALL
  importas UNAME UNAME
  importas NOT_ROOT_USER NOT_ROOT_USER
  importas USER_HOME USER_HOME
  importas PROJECT_HOME PROJECT_HOME
  importas SKIP_ON_TRAVIS SKIP_ON_TRAVIS
  importas CURRENT_DIR CURRENT_DIR
  importas GSTREAMER GSTREAMER
  importas ENABLE_PYTHON3 ENABLE_PYTHON3
  importas ENABLE_GTK ENABLE_GTK
  importas PREFIX PREFIX
  importas JHBUILD JHBUILD
  importas PATH PATH
  importas LD_LIBRARY_PATH LD_LIBRARY_PATH
  importas PYTHONPATH PYTHONPATH
  importas PKG_CONFIG_PATH PKG_CONFIG_PATH
  importas XDG_DATA_DIRS XDG_DATA_DIRS
  importas XDG_CONFIG_DIRS XDG_CONFIG_DIRS
  importas PYTHON PYTHON
  importas NOTVISIBLE NOTVISIBLE
  importas VIRTUALENVWRAPPER_VIRTUALENV VIRTUALENVWRAPPER_VIRTUALENV
  importas VIRTUALENV_WRAPPER_SH VIRTUALENV_WRAPPER_SH
  importas PYTHONUNBUFFERED PYTHONUNBUFFERED
  importas PYTHON_VERSION_MAJOR PYTHON_VERSION_MAJOR
  importas USER USER
  importas LANGUAGE_ID LANGUAGE_ID
  importas GITHUB_BRANCH GITHUB_BRANCH
  importas GITHUB_REPO_NAME GITHUB_REPO_NAME
  importas GITHUB_REPO_ORG GITHUB_REPO_ORG
  importas PI_HOME PI_HOME
  importas MAIN_DIR MAIN_DIR
  importas VIRT_ROOT VIRT_ROOT
  importas SCARLETT_CONFIG SCARLETT_CONFIG
  importas SCARLETT_HMM SCARLETT_HMM
  importas SCARLETT_LM SCARLETT_LM
  importas SCARLETT_DICT SCARLETT_DICT
  importas GST_PLUGIN_PATH GST_PLUGIN_PATH
  importas PYTHON_VERSION PYTHON_VERSION
  importas VIRTUALENVWRAPPER_PYTHON VIRTUALENVWRAPPER_PYTHON
  importas VIRTUALENVWRAPPER_SCRIPT VIRTUALENVWRAPPER_SCRIPT
  importas PYTHONSTARTUP PYTHONSTARTUP
  importas PIP_DOWNLOAD_CACHE PIP_DOWNLOAD_CACHE
  importas WORKON_HOME WORKON_HOME
  importas USER_SSH_PUBKEY USER_SSH_PUBKEY
  importas HOME HOME
  importas XDG_RUNTIME_DIR XDG_RUNTIME_DIR
  importas SIGNAL_BUILD_STOP SIGNAL_BUILD_STOP
}

foreground { s6-echo " [run] AFTER s6-env -i" }
foreground { s6-env }

# verify that we're the correct user, pi
foreground {
    s6-applyuidgid -u 1000 -g 1000 /usr/local/bin/goss -g /tests/goss.jhbuild.yaml validate --retry-timeout 30s --sleep 1s
}

importas REXIT ?

ifelse { s6-test $REXIT -gt 0 } {
         foreground { s6-echo " [run] goss had an error lets stop everything" }
         exit $REXIT
}

# s6-applyuidgid -u 1000 -g 1000 umask 022 /usr/local/bin/goss -g /tests/goss.jhbuild.yaml validate --retry-timeout 30s --sleep 1s
#######################################################################################################################################

# env
# printcontenv PATH
# NOTE: Working version!
# /usr/local/bin/goss -g /tests/goss.jhbuild.yaml validate --retry-timeout 30s --sleep 1s

######################################################################
# source: claw-docker-base
# NOTE: This will overwrite new environment variables you set
# in here using multiline to the ones the container sees!
# multisubstitute
# {
#   import -D "etcd" ETCD_HOST
#   import -D "2379" ETCD_HOST_PORT
#   import -D 0 ETCD_CONNECTION_TIMEOUT
# }
# foreground {
#   with-contenv
#   s6-env -i
#   s6-dumpenv -- /var/run/s6/container_environment
# }
######################################################################

## Signal build complete if running on ci ##
# if [[ $TRAVIS_CI ]]; then
#   echo " [run] finished running jhbuild goss tests ... sending signal complete"
#   exit $SIGNAL_BUILD_STOP
# fi

# importas program
# source: https://skarnet.org/software/execline/importas.html

# source: https://skarnet.org/software/s6-portable-utils/s6-test.html
# example: https://github.com/weahead/docker-nginx/blob/614d3d41471db0e93560e683ecbb6ea691d549cc/root/etc/cont-init.d/dnsmasq.sh
ifelse { s6-test -v $TRAVIS_CI } {
         foreground { s6-echo " [ [run] finished running jhbuild goss tests ... sending signal complete" }
         exit $SIGNAL_BUILD_STOP
}

# ifelse { s6-test $DRUPAL_SITE_DB_TABLES -eq 0 -o $DRUPAL_SITE_DB_REPLACE_EXISTING = "yes" } {
#         # Install the site, using the standard profile
#         # and don't send a e-mail notification.
#         cd /var/www/localhost/htdocs s6-setuidgid apache drush -y si
#         islandora_claw install_configure_form.update_status_module='array(FALSE,FALSE)'
#         --sites-subdir=default
#         --site-name="${DRUPAL_SITE_NAME}"
#         --site-mail="${DRUPAL_SITE_EMAIL}"
#         --locale="${DRUPAL_SITE_LOCALE}"
#         --account-name="${DRUPAL_SITE_ACCOUNT_NAME}"
#         --account-pass="${DRUPAL_SITE_ACCOUNT_PASSWORD}"
#         --account-mail="${DRUPAL_SITE_ACCOUNT_EMAIL}"
#         --db-url="mysql://${DRUPAL_SITE_DB_USER}:${DRUPAL_SITE_DB_PASSWORD}@${MYSQL_HOST}:${MYSQL_HOST_PORT}/${DRUPAL_SITE_DB_NAME}"
#         --db-su="${MYSQL_ROOT_USER}" --db-su-pw="${MYSQL_ROOT_PASSWORD}"
#     }

# foreground { s6-echo " [ [run] finished running jhbuild goss tests ... sending signal complete" }
# exit $SIGNAL_BUILD_STOP

