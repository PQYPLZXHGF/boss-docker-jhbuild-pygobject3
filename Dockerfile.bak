FROM bossjones/boss-docker-python3:latest
MAINTAINER Malcolm Jones <bossjones@theblacktonystark.com>

# Prepare packaging environment
ENV DEBIAN_FRONTEND noninteractive
ENV TERM "xterm-256color"

# # build-arg are acceptable
# # eg. docker build --build-arg var=xxx
# ARG SCARLETT_ENABLE_SSHD
# ARG SCARLETT_ENABLE_DBUS
# ARG SCARLETT_BUILD_GNOME
# ARG TRAVIS_CI

# # metadata
# ARG CONTAINER_VERSION
# ARG GIT_BRANCH
# ARG GIT_SHA

# ENV SCARLETT_ENABLE_SSHD ${SCARLETT_ENABLE_SSHD:-0}
# ENV SCARLETT_ENABLE_DBUS ${SCARLETT_ENABLE_DBUS:-'true'}
# ENV SCARLETT_BUILD_GNOME ${SCARLETT_BUILD_GNOME:-'true'}
# ENV TRAVIS_CI ${TRAVIS_CI:-'true'}

# RUN echo "SCARLETT_ENABLE_SSHD: ${SCARLETT_ENABLE_SSHD}"
# RUN echo "SCARLETT_ENABLE_DBUS: ${SCARLETT_ENABLE_DBUS}"
# RUN echo "SCARLETT_BUILD_GNOME: ${SCARLETT_BUILD_GNOME}"
# RUN echo "TRAVIS_CI: ${TRAVIS_CI}"

# # make apt use ipv4 instead of ipv6 ( faster resolution )
# RUN sed -i "s@^#precedence ::ffff:0:0/96  100@precedence ::ffff:0:0/96  100@" /etc/gai.conf

# # Install language pack before setting env vars to utf-8
# RUN \
#   apt-get update && \
#   apt-get -y upgrade && \
#   apt-get install -y sudo \
#   language-pack-en-base && \
#   apt-get clean && \
#   apt-get autoclean -y && \
#   apt-get autoremove -y && \
#   rm -rf /var/lib/{cache,log}/ && \
#   rm -rf /var/lib/apt/lists/*.lz4 /tmp/* /var/tmp/*

# # # Ensure UTF-8 lang and locale
# RUN locale-gen en_US.UTF-8
# ENV LANG       en_US.UTF-8
# ENV LC_ALL     en_US.UTF-8

# # ensure local python is preferred over distribution python
# ENV PATH /usr/local/bin:/usr/local/sbin:$PATH

# # http://bugs.python.org/issue19846
# # > At the moment, setting "LANG=C" on a Linux system *fundamentally breaks Python 3*, and that's not OK.

# # FIXME: DO NOT SET env var USER
# ENV UNAME "pi"
# ENV NOT_ROOT_USER "pi"

# # /home/pi
# ENV USER_HOME "/home/${UNAME}"

# # /home/pi/dev
# ENV PROJECT_HOME "/home/${UNAME}/dev"

# ENV LANG C.UTF-8
# ENV SKIP_ON_TRAVIS yes
# ENV CURRENT_DIR $(pwd)
# ENV GSTREAMER 1.0
# ENV ENABLE_PYTHON3 yes
# ENV ENABLE_GTK yes
# ENV PYTHON_VERSION_MAJOR 3
# ENV PYTHON_VERSION 3.5
# ENV CFLAGS "-fPIC -O0 -ggdb -fno-inline -fno-omit-frame-pointer"
# ENV MAKEFLAGS "-j4 V=1"

# # /home/pi/jhbuild
# ENV PREFIX "${USER_HOME}/jhbuild"

# # /home/pi/gnome
# ENV JHBUILD "${USER_HOME}/gnome"

# # /home/pi/.virtualenvs
# ENV PATH_TO_DOT_VIRTUALENV "${USER_HOME}/.virtualenvs"

# # /home/pi/jhbuild/bin:/home/pi/jhbuild/sbin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
# ENV PATH ${PREFIX}/bin:${PREFIX}/sbin:${PATH}

# # /home/pi/.virtualenvs/scarlett_os/lib
# ENV LD_LIBRARY_PATH ${PREFIX}/lib:${LD_LIBRARY_PATH}

# # /home/pi/jhbuild/lib/python3.5/site-packages:/usr/lib/python3.5/site-packages
# ENV PYTHONPATH ${PREFIX}/lib/python${PYTHON_VERSION}/site-packages:/usr/lib/python${PYTHON_VERSION}/site-packages

# # /home/pi/.virtualenvs/scarlett_os/lib/pkgconfig
# ENV PKG_CONFIG_PATH ${PREFIX}/lib/pkgconfig:${PREFIX}/share/pkgconfig:/usr/lib/pkgconfig

# # /home/pi/jhbuild/share:/usr/share
# ENV XDG_DATA_DIRS ${PREFIX}/share:/usr/share

# # /home/pi/jhbuild/etc/xdg
# ENV XDG_CONFIG_DIRS ${PREFIX}/etc/xdg

# ENV PYTHON "python3"
# ENV TERM "xterm-256color"
# ENV PACKAGES "python3-gi python3-gi-cairo"
# ENV CC gcc

# # lets install apt-fast
# RUN apt-get update && \
#     apt-get install -y software-properties-common && \
#     add-apt-repository -y ppa:saiarcot895/myppa && \
#     apt-get update

# RUN echo "apt-fast apt-fast/maxdownloads string 5" | debconf-set-selections; \
#     echo "apt-fast apt-fast/dlflag boolean true" | debconf-set-selections; \
#     echo "apt-fast apt-fast/aptmanager string apt-get" | debconf-set-selections; \
#     DEBIAN_FRONTEND=noninteractive apt-get install -y apt-fast

# RUN apt-fast update

# RUN apt-fast autoremove -y
# RUN apt-get clean && \
#     apt-get autoclean -y && \
#     apt-get autoremove -y && \
#     rm -rf /var/lib/{cache,log}/ && \
#     rm -rf /var/lib/apt/lists/*.lz4 /tmp/* /var/tmp/*
